name: CI Quality Gate

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            portal/package-lock.json

      - name: Install root dependencies
        run: npm ci

      - name: Install portal dependencies
        run: |
          cd portal
          npm ci

      - name: Run lint checks
        run: |
          # Add lint commands when available
          echo "Linting completed"

      - name: Run tests
        run: |
          # Add test commands when available
          echo "Tests completed"

      - name: Build application
        run: |
          cd portal
          # Add build commands if needed
          echo "Build completed"

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            portal/package-lock.json

      - name: Install dependencies
        run: |
          npm ci
          cd portal
          npm ci

      - name: Run tests with coverage
        run: |
          # Generate coverage reports when tests are available
          echo "Coverage generation completed"

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=cloud-advice-dashboard
            -Dsonar.organization=your-org
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=300

